install.packages(c("brulee", "censored", "rsample", "agua", "applicable", "bonsai", "broom", "butcher", "corrr", "finetune", "modeldata", "modeldb", "parsnip", "plsmod", "poissonreg", "probably", "recipes", "spatialsample", "textrecipes", "tune", "workflows", "yardstick"))
q()
#| eval: true
#| echo: true
# load parquet file as tibble
tic("Load the parquet files")
#| eval: true
#| echo: true
# Install pacman package if needed
if(!require("pacman")) install.packages("pacman")
# load the required packages
pacman::p_load(
httr,
jsonlite,
tidyjson,
tidyverse,
lubridate,
geosphere,
anytime,
tictoc,
stringi,
maptools,
geosphere,
sf,
sp,
openxlsx,
leaflet,
magrittr,
janitor,
arrow,
magrittr,
osrm
)
#| eval: true
#| echo: true
# load parquet file as tibble
tic("Load the parquet files")
df <- read_parquet("ml_data.parquet", as_tibble = TRUE)
toc()
glimpse(df)
#| eval: true
#| echo: true
if(!require(pacman)) install.packages("pacman")
pacman::p_load(
tidyverse,
gganimate,
gapminder
)
theme_set(theme_bw())
#| eval: true
#| echo: true
if(!require(pacman)) install.packages("pacman")
pacman::p_load(
tidyverse,
gganimate,
gapminder
)
theme_set(theme_bw())
#| eval: true
#| echo: true
data(gapminder)
#| eval: true
#| echo: true
#| comment: ""
glimpse(gapminder)
#| eval: true
#| echo: true
#| comment: ""
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_continuous(labels = scales::comma) +
labs(x = "GDP per capita", y = "Life expectancy")
p
#| eval: true
#| echo: true
#| comment: ""
p + transition_time(year) +
labs(title = "Year: {frame_time}")
#| eval: true
#| echo: true
#| comment: ""
p + facet_wrap(~continent) +
transition_time(year) +
labs(title = "Year: {frame_time}")
#| eval: true
#| echo: true
#| comment: ""
p + transition_time(year) +
labs(title = "Year: {frame_time}") +
view_follow(fixed_y = TRUE)
#| eval: true
#| echo: true
#| comment: ""
pop_ng <- gapminder %>%
filter(country == "Nigeria") %>%
ggplot(aes(x = year, y = pop, fill = pop)) +
geom_bar(stat = "identity", show.legend = FALSE) +
scale_fill_distiller(palette = "Reds", direction = 1) +
theme_minimal() +
theme(
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "white"),
panel.ontop = TRUE
) +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
geom_text(aes(label = paste0(round(pop/1000000,1), "M")))
pop_ng
#| eval: true
#| echo: true
#| comment: ""
pop_ng + transition_time(year) +
shadow_mark() +
labs(x = "Year",
y = "Population",
title = "Year: {frame_time}")
q()
install.packages("jsonlite")
install.packages("rmarkdown")
.libPaths( c( .libPaths(), "C:/Program Files/R/R-4.0.2/library") )
install.packages("rmarkdown")
.libPaths()
.libPaths( c("C:/Program Files/R/R-4.0.2/library"), .libPaths())
.libPaths( c("C:/Program Files/R/R-4.0.2/library", .libPaths()))
.libPaths()
install.packages("jsonlite", "rmarkdown")
.libPaths( c("C:/Program Files/R/R-4.0.2/library", .libPaths()))
install.packages("jsonlite", "rmarkdown")
install.packages(c("rmarkdown", "jsonlite"))
install.packages("htmltools")
install.packages("digest")
install.packages(c("rlang", "tidyverse", "tidymodels", "arrow", "DescTools", "DT"))
install.packages(c("rlang", "tidyverse", "tidymodels", "arrow", "DescTools", "DT"))
install.packages("fastmap")
install.packages(c("knitr", "knitrBootstrap", "knitrProgressBar"))
install.packages("xfun")
install.packages("evaluate")
install.packages("yaml")
install.packages("pacman")
q()
